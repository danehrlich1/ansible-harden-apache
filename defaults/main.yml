---

# using non-standard root dir?
#hardenwebserver_rootdir: ''

hardenwebserver_apache_mod_disable:
  - status

hardenwebserver_apache_modsecurity_engine: 'DetectionOnly'
#hardenwebserver_apache_modsecurity_engine: 'On'

## if you want to disable http.
## Note: http is required to validate letsencrypt challenge directly
hardenwebserver_disable_http: false
## set to true if your https config is coming from another role
##  in this case role 'https' config will be installed but not enabled
hardenwebserver_https_noconfig: false
hardenwebserver_remove_defaultindex: false
# http://sysadminsjourney.com/content/2010/02/01/apache-modproxy-error-13permission-denied-error-rhel/
hardenwebserver_proxy_redhat_selinux_allow: false
# if you use unusual ports, they have to be allowed on redhat selinux
#hardenwebserver_ports_redhat_selinux_allow: [ 8888, 5000 ]

## curl, wget, perl...
hardenwebserver_block_downloadagents: false
hardenwebserver_cachecontrol: false

## if defined/not empty, restrict webserver listen interface
## FIXME! only support one interface
#hardenwebserver_bind: 192.168.1.1
hardenwebserver_bind: ''

# do we need extra ports to listen?
harden_apache_extra_ports: []

harden_apache_use_syslog: false
harden_apache_rsyslog_template: 'rsyslog-apache.conf.j2'

hardenwebserver_cert: selfsigned
hardenwebserver_certinfo: '/C=US/ST=CA/L=San Francisco/O=Ansible'
hardenwebserver_certduration: 1095
## Ansible v2.2 module. will use hostname fqdn
#hardenwebserver_cert: letsencrypt
# path on orchestrator, if empty will be created
hardenwebserver_letsencrypt_user_key: ''
## staging or production url
hardenwebserver_letsencrypt_acme_dir: 'https://acme-staging.api.letsencrypt.org/directory'
#hardenwebserver_letsencrypt_acme_dir: 'https://acme-v01.api.letsencrypt.org/directory'
hardenwebserver_enable_defaultssl: true

## not recommended/supported for letsencrypt
hardenwebserver_cert_pinning: false

## https://content-security-policy.com/
## https://githubengineering.com/githubs-post-csp-journey/
## https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
#hardenwebserver_header_csp: "default-src self"
## this settings is necessary for default ubuntu or centos page
hardenwebserver_header_csp: "default-src 'self'; script-src 'self' 'unsafe-inline'; connect-src 'self'; img-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'self'; upgrade-insecure-requests; report-uri /csp/report.php"
#hardenwebserver_header_csp: "default-src 'none'; script-src 'self www.google-analytics.com ajax.googleapis.com'; connect-src 'self'; img-src 'self'; style-src 'self';"
#hardenwebserver_header_csp: "default-src 'none'; script-src 'self www.google-analytics.com ajax.googleapis.com'; connect-src 'self'; img-src 'self'; style-src 'self'; report-uri https://xxxx.report-uri.io/r/default/csp/enforce"
#hardenwebserver_header_csp: "default-src 'none'; script-src 'self www.google-analytics.com ajax.googleapis.com'; connect-src 'self'; img-src 'self'; style-src 'self'; report-uri-report-only https://xxxx.report-uri.io/r/default/csp/reportOnly"
harden_apache_cspreport_template: csp-hotline.php.j2

## https://scotthelme.co.uk/a-new-security-header-referrer-policy/
harden_webserver_header_refpolicy: origin
#harden_webserver_header_refpolicy: strict-origin-when-cross-origin
#harden_webserver_header_refpolicy: no-referrer-when-downgrade

## https://cipherli.st/
## https://wiki.mozilla.org/Security/Server_Side_TLS
## https://wiki.mozilla.org/Security/TLS_Configurations
## https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html
## https://openweb.eu.org/articles/https-de-ssl-a-tls-1-3
## https://www.ssi.gouv.fr/uploads/2017/02/security-recommendations-for-tls_v1.1.pdf
## https://bettercrypto.org/static/applied-crypto-hardening.pdf
harden_apache_sslciphersuite: 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH'
harden_apache_sslprotocol: 'All -SSLv2 -SSLv3 -TLSv1 -TLSv1.1'

## review php settings?
harden_apache_php: true

# https://www.ietf.org/id/draft-foudil-securitytxt-00.txt
harden_apache_securitytxt_template: security.txt.j2

# ActiveDirectory SSO with kerberos?
harden_apache_ad_sso: false
# Reminder: IE or Firefox will need local configuration to send kerberos token
harden_apache_ad_sso_keytab: keytab.txt
# Need a dedicated user and a principal ticket. latter must match webserver fqdn. Crypto choice must be supported by client.
# https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/ktpass
# http://blog.tgbits.com/2013/05/27/creating-keytab-file-with-multiple-select-crypto-types/
# WinDC> ktpass -princ HTTP/<fqdn@REALM> -mapuser <DOMAIN\account> -crypto AES256-SHA1 +rndPass -ptype KRB5_NT_PRINCIPAL -out keytab.txt
harden_apache_ad_sso_domain: local.domain
harden_apache_ad_sso_domain_dns:
  - 192.168.1.1
# or use virtualhost config
harden_apache_ad_sso_htaccess_template: htaccess-sso.j2
harden_apache_ad_sso_htaccess_path:
  - /var/www/html/sso/.htaccess
krb5_ticket_lifetime: 24000
krb5_kdc: dc-1.local.domain
krb5_admin_server: dc-1.local.domain

harden_apache_testing: false
testing_target: http://localhost
testing_siege_duration: 5m
#testing_siege_args: '-f urls.txt'
